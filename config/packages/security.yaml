parameters:
    imageUser_directory: '%kernel.project_dir%/public/uploads/images/UsersImage'

security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # in_memory: { memory: ~ }
        in_database:
            entity:
                class: App\Entity\User
                property: email 
    firewalls:
        login:
                pattern:  ^/api/login
                stateless: true
                anonymous: true
                json_login:
                    check_path:               /api/login_check
                    username_path: email
                    password_path : password
                    success_handler:          lexik_jwt_authentication.handler.authentication_success
                    failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api/
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthentificator
            
            provider: in_database
            
            form_login:
                login_path: app_login
                check_path: app_login
               
          

            logout:
                path: security_logout
                target: bibliotheque
                invalidate_session: false
                delete_cookies:
                    a: { path: null, domain: null }
                    b: { path: null, domain: null }
               
                
                
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/connexion, roles: ROLE_USER }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/event, roles: ROLE_USER }
        - { path: ^/dommander/event/, roles: ROLE_USER }
        - { path: ^/commande, roles: ROLE_USER }
        - { path: ^/confirmer/commande, roles: ROLE_USER }
        - { path: ^/ville, roles: ROLE_USER }
        - { path: ^/home, roles: ROLE_USER }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/,       roles: IS_AUTHENTICATED_FULLY }